<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--加载数据库属性配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--扫描含有注解的包-->
    <context:component-scan base-package="com.chuhelan.dao"/>
    <!--配置数据源==druid数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!--驱动名称-->
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <!--JDBC连接串-->
        <property name="url" value="${jdbc.url}"/>
        <!--数据库用户名称-->
        <property name="username" value="${jdbc.username}"/>
        <!--数据库密码-->
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化大小 -->
        <property name="initialSize" value="15"/>
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20"/>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!-- 连接空闲时测试是否有效 -->
        <property name="testWhileIdle" value="false"/>
        <!-- 获取连接时测试是否有效 -->
        <property name="testOnBorrow" value="false"/>
        <!-- 归还连接时是否测试有效 -->
        <property name="testOnReturn" value="false"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>
    </bean>

    <!--配置JDBCTemplate实例-->
    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/>
<!--    &lt;!&ndash; 1 事务管理器,依赖于数据源&ndash;&gt;-->
<!--    <bean id="transactionManager"-->
<!--          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"-->
<!--          p:dataSource-ref="dataSource"/>-->
<!--    &lt;!&ndash;2编写通知：对事务进行增强，需要编写对切入点和具体执行事务细节&ndash;&gt;-->
<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
<!--        <tx:attributes>-->
<!--            &lt;!&ndash; name:* 表示任意方法名称&ndash;&gt;-->
<!--            <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"-->
<!--                       read-only="false"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->
<!--    &lt;!&ndash; 3编写aop，让spring自动对目标生成代理，需要使用AspectJ的表达式&ndash;&gt;-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;3-1切入点&ndash;&gt;-->
<!--        <aop:pointcut id="txPointCut" expression="execution(* com.chuhelan.dao.AccountDaoImpl.transfer(..))"/>-->
<!--        &lt;!&ndash;3-2切面，将切入点与通知整合&ndash;&gt;-->
<!--        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>-->
<!--    </aop:config>-->
<!--    &lt;!&ndash;开启使用注解完成织入工作&ndash;&gt;-->
<!--    <aop:aspectj-autoproxy/>-->


</beans>